<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>电脑编程</description>
    <lastBuildDate>Tue, 25 Jul 2023 03:17:43 GMT</lastBuildDate>
    <item>
      <title>JavaScript 的成本 - 2023</title>
      <link>https://www.reddit.com/r/programming/comments/158vv8o/the_cost_of_javascript_2023/</link>
      <description><![CDATA[ 由   提交/u/fagnerbrack  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158vv8o/the_cost_of_javascript_2023/</guid>
      <pubDate>Tue, 25 Jul 2023 03:05:44 GMT</pubDate>
    </item>
    <item>
      <title>谷歌在 Android 设置中隐藏了一个秘密浏览器</title>
      <link>https://www.reddit.com/r/programming/comments/158v1hi/google_has_a_secret_browser_hidden_inside_android/</link>
      <description><![CDATA[ 由   提交/u/fagnerbrack  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158v1hi/google_has_a_secret_browser_hidden_inside_android/</guid>
      <pubDate>Tue, 25 Jul 2023 02:29:13 GMT</pubDate>
    </item>
    <item>
      <title>帮忙想出一个视频游戏的创意！</title>
      <link>https://www.reddit.com/r/programming/comments/158uh9l/help_with_a_video_game_idea/</link>
      <description><![CDATA[你好！ 在告诉你我需要什么之前，我要告诉你为什么我想要这个。  我一直在玩游戏，你必须磨练才能在游戏中获得一些东西，例如，在《口袋妖怪》中，你需要不断地训练和照顾你的口袋妖怪，让它们变得更强，而在《怪物猎人》中，你需要不断地狩猎怪物来变得更强，并在游戏中获得更好的装备（每次你击败怪物，它都会掉落你可以用来制作新的和独特的武器的原材料） 好吧，在我年轻的时候玩了数千小时后，我注意到你实际上没有任何“un” ique”  我认为你在这些游戏中获得的所有内容都无法毫不费力地复制（被黑客攻击），而且我得到的每个神奇宝贝确实都是“独特的”（每个神奇宝贝都有自己的“编码号”或统计信息，无论你有多少相同物种的神奇宝贝，都无法复制，这在分配的编码号中部分正确，并且每个神奇宝贝编码中都包含大约 20 个随机数字，每个神奇宝贝编码都不同） mon  毕竟，如果你所拥有的东西可以通过小黑客或错误轻松复制，那么它就不是独一无二的。所以，最后我不再玩这些游戏了。 ————————————————————- 我最近注意到这些“NFT”游戏即将到来，它们提供了真正的“磨练”体验，你可以真正拥有独特且独特的无法复制的物品，我认为你甚至可以将它们出售为真钱。此外，Valve（一家游戏公司）拥有《TF2》和《CSGO》，在这些游戏中，你实际上可以拥有需要真钱的稀缺数字物品（这意味着它们无法被克隆或黑客攻击），并且你可以在完成一些特殊任务后获得它们。  我的问题是，你实际上必须花真钱才能完成这些特殊任务，这并不是什么有趣的事情，所以我想知道是否有某种方法可以复制 Valve 和 nft 公司正在做的事情，而不涉及真钱，这样玩家就可以随时玩游戏，而无需每次付费，此外，你拥有独特的物品（至少在每个物品的编码中），这使得它们与另一个精确的副本不同，并且物品不能被克隆或黑客攻击以方便获得。当然，游戏只能在线玩。   由   提交/u/P10L1N   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158uh9l/help_with_a_video_game_idea/</guid>
      <pubDate>Tue, 25 Jul 2023 02:04:14 GMT</pubDate>
    </item>
    <item>
      <title>我制作了一个可以编写代码的自主代理</title>
      <link>https://www.reddit.com/r/programming/comments/158t5f9/i_made_an_autonomous_agent_that_writes_code/</link>
      <description><![CDATA[ 由   提交/u/___newmoon___   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158t5f9/i_made_an_autonomous_agent_that_writes_code/</guid>
      <pubDate>Tue, 25 Jul 2023 01:06:44 GMT</pubDate>
    </item>
    <item>
      <title>后退/前进缓存如何帮助 Yahoo!日本新闻 移动收入增加 9%</title>
      <link>https://www.reddit.com/r/programming/comments/158soqv/how_backforward_cache_helped_yahoo_japan_news/</link>
      <description><![CDATA[ 由   提交 /u/feross   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158soqv/how_backforward_cache_helped_yahoo_japan_news/</guid>
      <pubDate>Tue, 25 Jul 2023 00:46:42 GMT</pubDate>
    </item>
    <item>
      <title>Elixir（仍然）安全</title>
      <link>https://www.reddit.com/r/programming/comments/158s2nc/elixir_is_still_safe/</link>
      <description><![CDATA[ 由   提交 /u/real2corvus   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158s2nc/elixir_is_still_safe/</guid>
      <pubDate>Tue, 25 Jul 2023 00:20:38 GMT</pubDate>
    </item>
    <item>
      <title>Sierra 创意翻译 - 脚本</title>
      <link>https://www.reddit.com/r/programming/comments/158r0eh/sierra_creative_interpreter_scripts/</link>
      <description><![CDATA[ 由   提交/u/r_retrohacking_mod2   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158r0eh/sierra_creative_interpreter_scripts/</guid>
      <pubDate>Mon, 24 Jul 2023 23:36:41 GMT</pubDate>
    </item>
    <item>
      <title>帮助我的学习</title>
      <link>https://www.reddit.com/r/programming/comments/158qkbc/help_with_my_learning/</link>
      <description><![CDATA[我希望能够创建一个具有帐户功能的项目，该功能需要： 1.用户注册 2. 登录和身份验证 3. 密码管理 4. 帐户设置 5. 电子邮件验证 6. 帐户恢复 7. 帐户停用和删除 8. 访问控制 9. 会话管理 10. 安全措施 11. 双因素身份验证 (2FA) 12. 帐户活动跟踪  我不了解后端，但我想了解足够的知识以便能够添加所有这些。我应该从哪里开始？   由   提交/u/Slurpin_Spaghetti_22   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158qkbc/help_with_my_learning/</guid>
      <pubDate>Mon, 24 Jul 2023 23:18:53 GMT</pubDate>
    </item>
    <item>
      <title>TLA+ AutoRepair - 一个程序（带有 GPT-4），用于修复正式规格并帮助更好地理解它们</title>
      <link>https://www.reddit.com/r/programming/comments/158pvkm/tla_autorepair_a_program_with_gpt4_to_fix_formal/</link>
      <description><![CDATA[ 由   提交/u/kerberosmansour  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158pvkm/tla_autorepair_a_program_with_gpt4_to_fix_formal/</guid>
      <pubDate>Mon, 24 Jul 2023 22:51:12 GMT</pubDate>
    </item>
    <item>
      <title>橡皮鸭调试的 3 种替代方案</title>
      <link>https://www.reddit.com/r/programming/comments/158oqmd/3_alternatives_to_rubber_duck_debugging/</link>
      <description><![CDATA[ 由   提交/u/m-nazaria  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158oqmd/3_alternatives_to_rubber_duck_debugging/</guid>
      <pubDate>Mon, 24 Jul 2023 22:07:06 GMT</pubDate>
    </item>
    <item>
      <title>Tabnine：一款人工智能代码补全工具，可帮助您更快地编写更好的代码</title>
      <link>https://www.reddit.com/r/programming/comments/158nenj/tabnine_an_ai_code_completion_tool_that_helps_you/</link>
      <description><![CDATA[ 由   提交 /u/hadnazzar   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158nenj/tabnine_an_ai_code_completion_tool_that_helps_you/</guid>
      <pubDate>Mon, 24 Jul 2023 21:17:28 GMT</pubDate>
    </item>
    <item>
      <title>高级性能扩展 (APX)</title>
      <link>https://www.reddit.com/r/programming/comments/158n1p8/advanced_performance_extensions_apx/</link>
      <description><![CDATA[ 由   提交/u/mttd  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158n1p8/advanced_performance_extensions_apx/</guid>
      <pubDate>Mon, 24 Jul 2023 21:04:39 GMT</pubDate>
    </item>
    <item>
      <title>Golang 中的抽象设计模式与单元测试</title>
      <link>https://www.reddit.com/r/programming/comments/158mq50/abstract_design_pattern_in_golang_with_unit_tests/</link>
      <description><![CDATA[ 由   提交 /u/Ok_Beat5363   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158mq50/abstract_design_pattern_in_golang_with_unit_tests/</guid>
      <pubDate>Mon, 24 Jul 2023 20:53:06 GMT</pubDate>
    </item>
    <item>
      <title>使用 Golang 掌握干净的代码架构：实体和模型层实用指南</title>
      <link>https://www.reddit.com/r/programming/comments/158mo5x/mastering_clean_code_architecture_with_golang_a/</link>
      <description><![CDATA[ 由   提交 /u/Ok_Beat5363   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158mo5x/mastering_clean_code_architecture_with_golang_a/</guid>
      <pubDate>Mon, 24 Jul 2023 20:51:02 GMT</pubDate>
    </item>
    <item>
      <title>代码审查的未来</title>
      <link>https://www.reddit.com/r/programming/comments/158ls9r/the_future_of_code_reviews/</link>
      <description><![CDATA[ 由   提交 /u/DarkPlayer2   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/158ls9r/the_future_of_code_reviews/</guid>
      <pubDate>Mon, 24 Jul 2023 20:18:48 GMT</pubDate>
    </item>
    </channel>
</rss>