<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>电脑编程</description>
    <lastBuildDate>Sun, 30 Jul 2023 06:20:07 GMT</lastBuildDate>
    <item>
      <title>Leetcode 解决方案解释 | 704. C++ 中的二分查找</title>
      <link>https://www.reddit.com/r/programming/comments/15dbzpc/leetcode_solution_explained_704_binary_search_in_c/</link>
      <description><![CDATA[ 由   提交/u/Compliance_Rub124   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15dbzpc/leetcode_solution_explained_704_binary_search_in_c/</guid>
      <pubDate>Sun, 30 Jul 2023 04:19:28 GMT</pubDate>
    </item>
    <item>
      <title>简单稳定的扩散XL服务器</title>
      <link>https://www.reddit.com/r/programming/comments/15d9bx2/simple_stable_diffusion_xl_server/</link>
      <description><![CDATA[ 由   提交 /u/wordsmashing   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15d9bx2/simple_stable_diffusion_xl_server/</guid>
      <pubDate>Sun, 30 Jul 2023 02:00:46 GMT</pubDate>
    </item>
    <item>
      <title>本周新品：LK-99，一种室温超导体——绝对是游戏规则的改变者</title>
      <link>https://www.reddit.com/r/programming/comments/15d8mgl/new_this_week_lk99_a_roomtemperature/</link>
      <description><![CDATA[嘿各位，就在两天前，LK-99 的发现震惊了科学界，LK-99 是一种在室温下工作的超导体，不需要加压，并且可以很容易地用铅生产。这与传统超导体形成鲜明对比，传统超导体通常需要极低的温度、高压，并且通常需要复杂的制造工艺。这一突破不仅对硬件产生深远的影响，也对编程和人工智能产生深远的影响。 像 LK-99 这样易于生产的室温非加压超导体为显着加快处理速度开辟了可能性并提高了硬件效率。这意味着，作为程序员，我们可以展望未来，代码运行得更快，应用程序和服务变得更高效。 我对人工智能和机器学习的潜力感到特别兴奋。凭借这些新的计算能力，我们可以看到机器学习、神经网络和人工智能发展的飞跃。想象一下，只需当前时间的一小部分即可训练人工智能模型，或者运行复杂的算法，而无需担心硬件限制。 我很想听听您对此的想法。您如何看待 LK-99 对您作为程序员或 AI 研究人员的工作的影响？您认为它会带来哪些新的机遇或挑战？   由   提交 /u/Beneficial-Alps7944   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15d8mgl/new_this_week_lk99_a_roomtemperature/</guid>
      <pubDate>Sun, 30 Jul 2023 01:25:01 GMT</pubDate>
    </item>
    <item>
      <title>我需要帮助来理解这一点</title>
      <link>https://www.reddit.com/r/programming/comments/15d85ck/i_need_help_with_understanding_this/</link>
      <description><![CDATA[ 由   提交 /u/Mutinrzombi   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15d85ck/i_need_help_with_understanding_this/</guid>
      <pubDate>Sun, 30 Jul 2023 01:01:11 GMT</pubDate>
    </item>
    <item>
      <title>Golang 中的组合设计模式与单元测试</title>
      <link>https://www.reddit.com/r/programming/comments/15d62yu/composite_design_pattern_in_golang_with_unit_tests/</link>
      <description><![CDATA[ 由   提交 /u/Ok_Beat5363   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15d62yu/composite_design_pattern_in_golang_with_unit_tests/</guid>
      <pubDate>Sat, 29 Jul 2023 23:24:04 GMT</pubDate>
    </item>
    <item>
      <title>共享：与手机共享文件的命令行工具</title>
      <link>https://www.reddit.com/r/programming/comments/15d4xi2/sharing_commandline_tool_to_share_files_with_your/</link>
      <description><![CDATA[ 由   提交/u/saitamaismyman   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15d4xi2/sharing_commandline_tool_to_share_files_with_your/</guid>
      <pubDate>Sat, 29 Jul 2023 22:32:02 GMT</pubDate>
    </item>
    <item>
      <title>评价我的口袋妖怪问答游戏！</title>
      <link>https://www.reddit.com/r/programming/comments/15d1wjh/rate_my_pokemon_quiz_game/</link>
      <description><![CDATA[ 由   提交/u/gabr0236   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15d1wjh/rate_my_pokemon_quiz_game/</guid>
      <pubDate>Sat, 29 Jul 2023 20:23:02 GMT</pubDate>
    </item>
    <item>
      <title>使主 Zig 可执行文件不再依赖于 LLVM、LLD 和 Clang 库</title>
      <link>https://www.reddit.com/r/programming/comments/15czxl9/make_the_main_zig_executable_no_longer_depend_on/</link>
      <description><![CDATA[ 由   提交/u/alexeyr  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15czxl9/make_the_main_zig_executable_no_longer_depend_on/</guid>
      <pubDate>Sat, 29 Jul 2023 18:58:16 GMT</pubDate>
    </item>
    <item>
      <title>高级开发人员在这一点上错了！</title>
      <link>https://www.reddit.com/r/programming/comments/15czxa4/senior_devs_are_wrong_on_that_one/</link>
      <description><![CDATA[ 由   提交 /u/mehdifarsi   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15czxa4/senior_devs_are_wrong_on_that_one/</guid>
      <pubDate>Sat, 29 Jul 2023 18:57:57 GMT</pubDate>
    </item>
    <item>
      <title>WebAssembly 将如何改变边缘计算</title>
      <link>https://www.reddit.com/r/programming/comments/15czwdn/how_webassembly_will_transform_edge_computing/</link>
      <description><![CDATA[ 由   提交/u/stronghup  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15czwdn/how_webassembly_will_transform_edge_computing/</guid>
      <pubDate>Sat, 29 Jul 2023 18:56:57 GMT</pubDate>
    </item>
    <item>
      <title>Rust 编译器中的后端并行性</title>
      <link>https://www.reddit.com/r/programming/comments/15czq4i/backend_parallelism_in_the_rust_compiler/</link>
      <description><![CDATA[ 由   提交/u/alexeyr  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15czq4i/backend_parallelism_in_the_rust_compiler/</guid>
      <pubDate>Sat, 29 Jul 2023 18:49:34 GMT</pubDate>
    </item>
    <item>
      <title>Github Global Campus - 为经过验证的学生提供免费的 Github Pro、Copilot 等</title>
      <link>https://www.reddit.com/r/programming/comments/15czozn/github_global_campus_free_github_pro_copilot_and/</link>
      <description><![CDATA[ 由   提交 /u/PotatoesBeatYou   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15czozn/github_global_campus_free_github_pro_copilot_and/</guid>
      <pubDate>Sat, 29 Jul 2023 18:48:02 GMT</pubDate>
    </item>
    <item>
      <title>对 PyPi 包的反馈 - PandaPlyr</title>
      <link>https://www.reddit.com/r/programming/comments/15cz7y8/feedback_on_pypi_package_pandaplyr/</link>
      <description><![CDATA[我一直想要像 R 在 Python 中那样的管道语法。尽管您可以链接 pandas 方法，但在很多情况下（对我来说）感觉编写和阅读都很笨拙。有几个现有的软件包，但我觉得没有一个真正满足我的需求和偏好。  如果有人想尝试并提供反馈，我想改进它。 README.md 中有内置的数据集和示例。  安装：pip install PandaPlyr 存储库：https://github.com/OlivierNDO/PandaPlyr    由   提交/u/HungryQuant  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15cz7y8/feedback_on_pypi_package_pandaplyr/</guid>
      <pubDate>Sat, 29 Jul 2023 18:28:07 GMT</pubDate>
    </item>
    <item>
      <title>我使用这些第三方编程工具在 5 天内推出了一个产品。</title>
      <link>https://www.reddit.com/r/programming/comments/15cxxpc/i_use_these_thirdparty_programming_tools_to/</link>
      <description><![CDATA[ 由   提交/u/livc95  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15cxxpc/i_use_these_thirdparty_programming_tools_to/</guid>
      <pubDate>Sat, 29 Jul 2023 17:32:58 GMT</pubDate>
    </item>
    <item>
      <title>Pull 请求是蛋糕还是小狗</title>
      <link>https://www.reddit.com/r/programming/comments/15cxr4x/pull_requests_are_cake_or_puppies/</link>
      <description><![CDATA[ 由   提交/u/Professional_Cook808  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/15cxr4x/pull_requests_are_cake_or_puppies/</guid>
      <pubDate>Sat, 29 Jul 2023 17:25:04 GMT</pubDate>
    </item>
    </channel>
</rss>