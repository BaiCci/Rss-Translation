<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：webdev</title>
    <link>https://www.reddit.com/r/webdev/new</link>
    <description>致力于所有 Web 开发的社区：前端和后端。有关更多与设计相关的问题，请尝试 /r/web_design。</description>
    <lastBuildDate>Fri, 28 Jul 2023 09:17:41 GMT</lastBuildDate>
    <item>
      <title>使用 firebase 作为用户按月付费的网站后端是否免费/合法？</title>
      <link>https://www.reddit.com/r/webdev/comments/15bs4b4/is_it_freelegal_to_use_firebase_as_a_backend_for/</link>
      <description><![CDATA[有关更多背景信息，我正在创建一个语言学习网站，并希望为那些愿意付费的人提供增强的体验。基本上是允许他们拥有包含更多个性化内容、更多内容等的帐户。我的另一个问题是是否因为我主要关注前端，所以我正在寻找创建后端的最简单的替代方案，并且因为我已经使用过 firebase，所以我认为这将是最好的选择。如果有人对我应该使用什么有其他建议，请随时分享。   由   提交/u/Lopside_Singer_4027   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15bs4b4/is_it_freelegal_to_use_firebase_as_a_backend_for/</guid>
      <pubDate>Fri, 28 Jul 2023 09:05:32 GMT</pubDate>
    </item>
    <item>
      <title>寻找有关 webdev 的每日 Youtube 视频相关主题</title>
      <link>https://www.reddit.com/r/webdev/comments/15brnvs/looking_for_daily_youtube_videos_on_webdev/</link>
      <description><![CDATA[您有推荐的 Youtuber 每天制作与 webdev 相关主题的视频吗？比如 UI 设计、React、BE 等等？尝试扩大我在该领域的知识。   由   提交 /u/lordgriefter   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15brnvs/looking_for_daily_youtube_videos_on_webdev/</guid>
      <pubDate>Fri, 28 Jul 2023 08:39:14 GMT</pubDate>
    </item>
    <item>
      <title>在这种情况下使用 GET 或 POST 方法检索信息？</title>
      <link>https://www.reddit.com/r/webdev/comments/15brloa/use_a_get_or_post_method_for_retrieving/</link>
      <description><![CDATA[我正在设计一个 API，它在请求中获取一些数据，然后简单地从数据库读取信息并在响应中返回它。因此，它仅用于数据读取目的，而不用于任何更新。但是，我在请求正文中需要的信息是一个对象列表，对于每个对象，我也必须以列表形式返回信息 [ { &quot;id&quot;: &quot;12345&quot; ;, “user_id”: “U64334”, “segment”: “” }, {}, {}, ]  由于列表可能很长，我不想使用查询参数或路径参数，因为 URI 会变得很长，这对于某些人来说不允许合作和分析原因。因此，我必须仅以 JSON 正文的形式传递信息。 现在我的问题是该 API 是否使用 GET 或 POST 方法。 GET 通常用于读取操作，这里就是这种情况，但是，我们通常不会在 GET 请求中发送 request-body，对吧？而POST通常用于数据插入。 因此，我必须在其中一种协议上做出妥协，应该是哪一种？ 注意：这个API将用于服务器到服务器的通信，而不是直接从浏览器调用。   由   提交 /u/reddit__is_fun   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15brloa/use_a_get_or_post_method_for_retrieving/</guid>
      <pubDate>Fri, 28 Jul 2023 08:35:33 GMT</pubDate>
    </item>
    <item>
      <title>我不明白为什么 TypeScript 是一个美丽、完美的必备工具，而 JS 却被如此抛弃</title>
      <link>https://www.reddit.com/r/webdev/comments/15brjxr/i_cant_see_why_typescript_is_a_beautiful_perfect/</link>
      <description><![CDATA[当我开始工作时，我们没有使用 TS，我们只有 JS 以及 JSDocs 和 ESlint 的组合。这是一个中等项目，我发誓，使用 TS 可以避免该项目的所有缺陷没有：当然，如果有的话那就太好了，因为它实际上改善了 DX 体验 [&lt; em&gt;咳不再需要编写参数和返回类型咳]，但大多数问题要么是由于糟糕的架构决策或BE响应造成的。 For后者，TypeScript 将是完美的：你有一个 MyPayload 类型，你期望它，如果后端向你发送一些奇怪的东西，你会抛出一个错误......如果只有 TypeScript 确实像这样工作：它不会在运行时检查任何内容，因为它已经转化为 JS，并且它在 params/type 强制之后没有设置任何保护，所以无论如何你都必须手动编写这些检查。 TS：是的，你可以用 JS 做一些非常奇怪的事情（“111”+ 1），但老实说，我无法想象会发生这种情况并且 TS 解决了它：要么你认真地重用不同类型之间的变量，要么你写根本没有检查 - 在这种情况下 TS 无论如何也救不了你。 也就是说，现在我们在工作中使用 TS，我喜欢 DX 体验：这比不必编写参数要好得多并使用 JSDocs 返回类型，但无论如何我仍然像以前一样编写尽可能多的检查，对我个人来说，没有什么大的改变   由   提交 /u/MozzarellaCode   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15brjxr/i_cant_see_why_typescript_is_a_beautiful_perfect/</guid>
      <pubDate>Fri, 28 Jul 2023 08:32:48 GMT</pubDate>
    </item>
    <item>
      <title>html可以分页吗？</title>
      <link>https://www.reddit.com/r/webdev/comments/15bqpll/is_it_possible_to_paginate_html/</link>
      <description><![CDATA[      我正在开发一个 epub 阅读器应用程序。解析 epub 文件后，我得到电子书中每一章的 html（一堆 p 标签）。我希望能够在我的 C# 后端上对此页面进行分页并提供一个“页面”摘自本章。 我还希望有一个逐行排列的网格。在屏幕高度结束时，文本将在下一列中继续。 请建议如何实现此目的。 来自 html 的示例文本   由   提交/u/sudhanv99  [链接] [评论] &lt; /表&gt;]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15bqpll/is_it_possible_to_paginate_html/</guid>
      <pubDate>Fri, 28 Jul 2023 07:42:58 GMT</pubDate>
    </item>
    <item>
      <title>在CSS中如何实现这样的布局呢？</title>
      <link>https://www.reddit.com/r/webdev/comments/15bphsc/how_to_achieve_this_layout_in_css/</link>
      <description><![CDATA[      所以我在一个最大宽度为1200px的容器中，在容器中我有一个带有两个孩子的弹性父级，我希望右侧的子级位于屏幕的边缘，如（附图），但是，容器很重要，因为其他部分都在该容器内，以便所有部分具有相同的边距设备和相同的响应行为。如果有任何技巧可以实现此目的，这里的任何 CSS 专家都可以提供帮助。 https://preview.redd.it/vmzejdhyhneb1.png?width=812&amp;format=png&amp;auto=webp&amp;s=425c2a181c483b57bdc 0f594b857bbc003806cdb   由   提交/u/jawadulhassan   [链接] [评论] &lt; /表&gt;]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15bphsc/how_to_achieve_this_layout_in_css/</guid>
      <pubDate>Fri, 28 Jul 2023 06:33:08 GMT</pubDate>
    </item>
    <item>
      <title>使用 C (CGI) 作为后端的缺点？</title>
      <link>https://www.reddit.com/r/webdev/comments/15bp0p3/downsides_of_using_c_cgi_as_backend/</link>
      <description><![CDATA[嘿，那些使用 C 作为后端的家伙...这样做的缺点是什么？你们仍然使用 C 作为后端吗？   由   提交 /u/Any_Possibility4092   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15bp0p3/downsides_of_using_c_cgi_as_backend/</guid>
      <pubDate>Fri, 28 Jul 2023 06:06:14 GMT</pubDate>
    </item>
    <item>
      <title>如何将 clerk 与其他用户数据集成</title>
      <link>https://www.reddit.com/r/webdev/comments/15bow29/how_do_i_integrate_clerk_with_other_user_data/</link>
      <description><![CDATA[我必须为客户制作一个网站，并被要求使用 Clerk 进行身份验证。我已经在 nextjs 中进行了设置。 现在，注册后，用户需要通过入门来收集一些信息。我在哪里存储这些信息？ 我的第一个想法是拥有一个数据库，创建一个用户表并将 clerk 的 userId 映射为主键并添加其他信息，但这是正确的方法吗？ 我还必须进行其他用户相关的数据输入，例如在 aws 上存储多个 csv 文件，以及其他一些 CRUD 功能。 所以这是我的第一个问题，如何处理/映射职员和其他数据。  我的第二个问题是如何实施入职？我制作了一个像 typeform 一样工作的路线 /onboarding，如果用户是新用户，我只想显示一次。有什么标准方法可以实现这一点吗？ 提前致谢。   由   提交 /u/ZyanCarl   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15bow29/how_do_i_integrate_clerk_with_other_user_data/</guid>
      <pubDate>Fri, 28 Jul 2023 05:59:32 GMT</pubDate>
    </item>
    <item>
      <title>考虑指向另一个原点的全屏 IFrame</title>
      <link>https://www.reddit.com/r/webdev/comments/15booed/considering_full_screen_iframes_pointing_to/</link>
      <description><![CDATA[大家好！ 我对前端 Web 开发还很陌生，所以我从纯 JS/CSS/HTML 开始项目学习诀窍并尝试建立一个非常快的网站。经过一番研究后，我现在正在考虑在我的项目中使用一些静态页面，这些页面由单个全屏 iframe 组成，几乎没有其他内容，作为“切换源”的一种方式。无需重定向到地址栏中的其他 URL。 我想到了可以通过这种方式部署 i 框架的三个用例：  我想通过 Cloudflare Pages 等静态站点服务部署我网站中的大多数页面，以利用其免费产品和高性能。然而，同一子域中的一些其他页面需要是动态的。因此，对于这些页面，我只是为客户提供一个全屏 i 框架，指向我在另一个子域中的页面，该子域托管在我自己的服务器上。 我正在考虑开发一款浏览器游戏具有多种游戏的网站。这些游戏有不同的用户体验，所以我想将它们放在不同的子域中，但它们将共享相同的客户端，因为大部分逻辑都是服务器端的。但是，由于游戏位于不同的子域中，由于同源策略，我无法在子域之间共享游戏客户端或缓存数据。因此，我想让所有子域都具有指向单个子域上的游戏客户端的全屏 iframe，因此从浏览器的角度来看，它们都算作同源。 结合上述内容两个用例的额外好处是能够在 iframe 加载之前显示静态页面。这可以是加载旋转器或游戏更新说明。由于 Cloudflare 的边缘网络对用户的延迟低于我自己的服务器，这可能会带来更好的用户体验。  除此之外，我不关心使用的动态页面的 SEO iframe 根本没有，因为它们要么需要登录，要么没有文本内容。 所以这是我的问题：以这种方式使用全屏 i-frame 是一个好主意，还是真的很糟糕实践？  在我看来，我的 i-frame 方法有明显的好处，但一般来说，网上的人似乎都建议不要使用 i-frame，并且用它替换整个页面是一种 hacky 解决方案，所以我想知道您的想法。 此外，是否有任何非 iframe 替代方案可以实现我没有想到的用例？   由   提交/u/2001zhaozhao   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15booed/considering_full_screen_iframes_pointing_to/</guid>
      <pubDate>Fri, 28 Jul 2023 05:46:58 GMT</pubDate>
    </item>
    <item>
      <title>将项目迁移到公共域</title>
      <link>https://www.reddit.com/r/webdev/comments/15bo07d/migrating_project_to_public_domain/</link>
      <description><![CDATA[我一直在开发一个带有 sql server 数据库的 React Web 应用程序，我准备从本地主机开发转移到互联网上的部署。我需要获取一个域并托管它以及服务器和数据库。但我不确定从哪里开始这个过程。我确信 AWS 有适合我的东西，但我正在寻找一个不太难理解且不会花太多钱的好选择。 TIA   由   提交 /u/ahiddenJEM   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15bo07d/migrating_project_to_public_domain/</guid>
      <pubDate>Fri, 28 Jul 2023 05:09:45 GMT</pubDate>
    </item>
    <item>
      <title>需要反馈。您对 Peerlist 有何看法？</title>
      <link>https://www.reddit.com/r/webdev/comments/15bnqhu/feedback_needed_what_do_you_think_about_peerlist/</link>
      <description><![CDATA[Peerlist 是一个面向开发人员、设计师、产品经理和投资者的专业社交平台。您可以在不同的平台上展示您的工作，启动副项目并与志趣相投的人互动。 ​ 由于这是一个开发者社区，因此希望获得一些有关以下方面的反馈：产品。 可在 peerlist.io  ​  上获取  由   提交 /u/hey_yogini   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15bnqhu/feedback_needed_what_do_you_think_about_peerlist/</guid>
      <pubDate>Fri, 28 Jul 2023 04:55:23 GMT</pubDate>
    </item>
    <item>
      <title>无需智能手机的网络工具</title>
      <link>https://www.reddit.com/r/webdev/comments/15bnjnf/web_tools_to_get_around_needing_a_smartphone/</link>
      <description><![CDATA[在决定我对自己在网络之外消耗的媒体量并不太满意后，我改用了翻盖手机屏幕前的开发人员。我在网上对自己的界限感到非常糟糕，所以我已经变得核化了。到目前为止，唯一的问题是在我的工作中依赖它。我这里仍然有旧的，但没有什么可以阻止我下载所有应用程序等。 现在许多应用程序显然是移动优先的，但我想找到可以帮助我在没有手机的情况下进行开发的工具。如果它们让我成为更好的开发者，那就额外奖励了哈哈 我真的很想完全切换，所以如果有人知道我可以尝试的任何工具，我将不胜感激。 谢谢   由   提交/u/anxdinx  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15bnjnf/web_tools_to_get_around_needing_a_smartphone/</guid>
      <pubDate>Fri, 28 Jul 2023 04:44:43 GMT</pubDate>
    </item>
    <item>
      <title>仅当我将高度设置为 40px 时，按钮才会看起来是圆形的。否则，它看起来像第二张图片。我想让这些按钮变得更小并且像第一张图片一样完美圆形，如何在所有设备上保持它们相同？</title>
      <link>https://www.reddit.com/r/webdev/comments/15bmydm/only_when_i_set_the_height_to_40px_buttons_look/</link>
      <description><![CDATA[    /u/pinkcheems   [链接] [评论] &lt; /表&gt;]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15bmydm/only_when_i_set_the_height_to_40px_buttons_look/</guid>
      <pubDate>Fri, 28 Jul 2023 04:12:41 GMT</pubDate>
    </item>
    <item>
      <title>使用 Prometheus 和 Grafana 监控 Caddy - TheDeveloperCafe</title>
      <link>https://www.reddit.com/r/webdev/comments/15bmdld/monitoring_caddy_with_prometheus_and_grafana/</link>
      <description><![CDATA[       由   提交/u/sarusethi  [链接] [评论] &lt; /表&gt;]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15bmdld/monitoring_caddy_with_prometheus_and_grafana/</guid>
      <pubDate>Fri, 28 Jul 2023 03:43:15 GMT</pubDate>
    </item>
    <item>
      <title>伟大的前端值得吗？</title>
      <link>https://www.reddit.com/r/webdev/comments/15bltby/is_greatfrontend_worth_it/</link>
      <description><![CDATA[看到https://www.greatfrontend.com/ system-design 推荐用于前端系统设计。值这个价钱吗？生命周期计划相当陡峭。 尽管有行业经验，但我还是从演示内容中学到了一些东西！   由   提交 /u/badboyzpwns   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/15bltby/is_greatfrontend_worth_it/</guid>
      <pubDate>Fri, 28 Jul 2023 03:13:44 GMT</pubDate>
    </item>
    </channel>
</rss>