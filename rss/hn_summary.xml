<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HN总结</title><link/>https://tg.ica.su<description>由大型语言模型编写的顶级 Hacker News 故事的自动摘要。</description><pubDate> Mon, 24 Apr 2023 11:05:08 +0300</pubDate><lastbuilddate> 2023 年 4 月 24 日星期一 11:05:08 +0300 </lastbuilddate><atom:link href="https://tg.i-c-a.su/rss/hn_summary" rel="self" type="application/rss+xml"></atom:link><item><title>问 HN：ChatGPT 是人类为自己建造的陷阱吗？</title><description> &lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35683925&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;问 HN：ChatGPT 是人类为自己建造的陷阱吗？ &lt;/a>;&lt;br />; &lt;a href=&quot;news.ycombinator.com&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;news.ycombinator.com&lt;/a>; 上提出的问题是 ChatGPT 是否是一个陷阱人类正在为自己建设。作者认为，ChatGPT 价格昂贵、固执己见、有政治偏见，并且由一小部分人控制。争议在于依赖这种技术进行沟通和决策的潜在负面影响。作者建议 ChatGPT 不会学习新技能，这可能会限制其长期用途。总的来说，这篇文章提出了关于技术在我们生活中的作用以及过度依赖它的潜在后果的重要问题。</description><pubDate> Mon, 24 Apr 2023 11:05:08 +0300</pubDate><link/> https://t.me/hn_summary/21565<guid> https://t.me/hn_summary/21565</guid></item><item><title> [媒体] Windows 11 的任务栏终于有了标签，不再组合应用程序图标</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35684432&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;Windows 11 的任务栏终于有了标签，不再合并应用程序图标&lt;/ a>;&lt;br />; 微软终于在 Windows 11 任务栏中添加了永不组合的应用程序图标和标签，因为操作系统的大修中没有这些强烈要求的功能。 Twitter 用户 Albacore 发现，微软即将公开测试 Windows 11 任务栏的永不组合应用程序图标选项，以及文本标签，以更轻松地识别应用程序。添加永不组合的应用程序图标和标签一直是一个非常受欢迎的功能，在微软的 Windows 反馈应用程序中获得了超过 26,000 票。 Microsoft 现在通过新的 Canary 频道预览 Windows 的重大变化。&lt;br/>;&lt;br/>;</description><pubDate> Mon, 24 Apr 2023 10:54:53 +0300</pubDate><link/> https://t.me/hn_summary/21564<guid> https://t.me/hn_summary/21564</guid></item><item><title> [媒体]作为AI语言模型</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35684125&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;作为 AI 语言模型&lt;/a>;&lt;br />; 这tweet 只是通知用户需要 JavaScript 才能使用 Twitter，并提供指向帮助中心的链接以获取有关支持的浏览器的更多信息。此内容中没有争议或令人惊讶的信息。&lt;br/>;&lt;br/>;</description><pubDate> Mon, 24 Apr 2023 10:26:31 +0300</pubDate><link/> https://t.me/hn_summary/21563<guid> https://t.me/hn_summary/21563</guid></item><item><title> Unix 编程和自动内存管理</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35684335&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;Unix 编程和自动内存管理&lt;/a>;&lt;br / >; 根据作者的说法，由于 Unix 与 C 的关联，人们普遍认为 Unix 是一种手动内存管理的编程环境，这在某种程度上是一种错觉。从 V7 Unix 开始，大量的 Unix 编程一直是用具有自动内存管理的语言完成的，例如 shell 脚本、awk、make 和 Perl。在贝尔实验室研究 Unix 和后来的 Plan 9 中，为 Unix 和在 Unix 上创建的大多数新语言都是具有自动内存管理的语言。 Unix 的创造者在任何情况下都没有在哲学上反对自动内存管理。</description><pubDate> Mon, 24 Apr 2023 10:21:24 +0300</pubDate><link/> https://t.me/hn_summary/21562<guid> https://t.me/hn_summary/21562</guid></item><item><title>无锁算法简介</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35684232&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;无锁算法简介&lt;/a>;&lt;br />; 无锁算法对于 Linux 内核变得越来越重要，尤其是当传统的锁定原语性能不够好时。本系列文章深入探讨了无锁算法背后的概念以及它们在内核中的使用方式。第一篇文章解释了“获取”和“释放”语义的基本概念，其中对许多常见的多线程编程实践进行了简单解释。本文还探讨了消息传递模式以及如何将其用于线程间的无锁通信。理解这些概念对于遇到基本无锁编程接口的开发人员来说至关重要。 （根据 59% 的故事文本进行总结。）</description><pubDate> Mon, 24 Apr 2023 09:45:59 +0300</pubDate><link/> https://t.me/hn_summary/21561<guid> https://t.me/hn_summary/21561</guid></item><item><title>我从 Hacker News 下载了 3500 万篇帖子，这是我所知道的</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35676444&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;我从 Hacker News 下载了 3500 万篇帖子，这就是我所拥有的众所周知&lt;/a>;&lt;br />;嘿！本文的作者从 Hacker News 下载了 3500 万篇文章，并准备分享他们的发现。他们分析了一部分包含 URL 和标题的帖子，并重点关注在 Hacker News 上发布帖子的最佳日期和时间、标题长度如何影响参与度以及与 Y Combinator 相关联是否会影响参与度等问题。他们还比较了 a16z、Sequoia 和 Kleiner Perkins 等风险投资公司，甚至研究了 Elon Musk 名字不同变体的流行程度。此外，他们还确定了 Hacker News 上排名前 10 位和排名后 10 位的用户。查看他们的 HuggingFace 数据集！</description><pubDate> Mon, 24 Apr 2023 09:22:38 +0300</pubDate><link/> https://t.me/hn_summary/21560<guid> https://t.me/hn_summary/21560</guid></item><item><title> [媒体] Show HN: Concise – 在思维导图中阅读新闻</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35676909&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;显示 HN：简明 – 在思维导图中阅读新闻&lt;/a>; &lt;br />; 推出 Concise，一种使用思维导图阅读新闻的新方法。我们的 AI 技术提供每日新闻摘要和监控报告，让您了解最新事件。借助 Concise，您可以轻松浏览复杂的新闻报道并深入了解手头的问题。告别冗长的文章，向简洁易读的思维导图问好。今天就在 &lt;a href=&quot;www.concise.app&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;www.concise.app&lt;/a>; 试试吧。&lt;br/>;&lt;br/>;</description><pubDate> Mon, 24 Apr 2023 08:33:07 +0300</pubDate><link/> https://t.me/hn_summary/21559<guid> https://t.me/hn_summary/21559</guid></item><item><title> [媒体] Show HN：jql新大版本发布</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35678038&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;显示HN：jql的新主要版本已经发布&lt;/ a>;&lt;br />; jql 项目是一个用 Rust 构建的 JSON 查询语言工具，旨在快速、轻量级和简单。它可用于使用一系列标记从 JSON 输入中选择数据，并支持各种选择器、分隔符和运算符。该项目提供有意义的错误消息，旨在将 JSON 作为输入、处理它并输出 JSON。该项目可以使用包管理器或手动从 GitHub 安装在各种平台上。作者指出，该项目无意与 jq 或任何其他类似工具保持一致。&lt;br/>;&lt;br/>;</description><pubDate> Mon, 24 Apr 2023 08:33:00 +0300</pubDate><link/> https://t.me/hn_summary/21558<guid> https://t.me/hn_summary/21558</guid></item><item><title> Show HN：由 LLM 生成的带有特定位置小部件的世界地图</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35678371&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;显示 HN：LLM 生成的带有特定位置小部件的世界地图&lt;/a>;&lt;br />; 引入了一个新的世界地图，其中包含由 LLM 生成的特定于位置的小部件。该地图是使用 LLM 动态生成前端内容的实验。只需导航到地图上的某个位置并等待几秒钟，您就会看到弹出的小部件，其中包含与当前位置相关的 LLM 选择的内容。内容包括有趣的事实、著名人物以及代表该位置的歌曲/视频。但是，请务必注意，视频出现时会自动播放。查看演示并在 Github 上查看源代码。</description><pubDate> Mon, 24 Apr 2023 08:32:50 +0300</pubDate><link/> https://t.me/hn_summary/21557<guid> https://t.me/hn_summary/21557</guid></item><item><title>显示 HN：ANSI C 中的 CJ 最小 JSON 解析器</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35679778&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;显示 HN：ANSI C 中的 CJ 最小 JSON 解析器&lt;/a>; &lt;br />; CJ 最小 JSON 解析器是一个低级、可移植、轻量级的解析器，用 ANSI C 编写，没有外部依赖性，也没有动态内存分配。它适用于微控制器，并提供一个基于令牌的低级接口来访问 JSON 结构。但是，解析器不转换任何数据，所有值都被视为字符串，因此应用程序负责将它们转换为数字、布尔值等。API 是最小的，应用程序应该围绕它提供定制的功能. CJ 代码的灵感来自 JSMN 库，在处理已知 JSON 数据和令牌的最大大小时已知时非常有用。</description><pubDate> Mon, 24 Apr 2023 08:32:40 +0300</pubDate><link/> https://t.me/hn_summary/21556<guid> https://t.me/hn_summary/21556</guid></item></channel></rss>