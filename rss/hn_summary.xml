<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HN总结</title><link/>https://tg.ica.su<description>由大型语言模型编写的顶级 Hacker News 故事的自动摘要。</description><pubDate> Tue, 18 Apr 2023 09:03:25 +0300</pubDate><lastbuilddate> 2023 年 4 月 18 日星期二 09:03:25 +0300 </lastbuilddate><atom:link href="https://tg.i-c-a.su/rss/hn_summary" rel="self" type="application/rss+xml"></atom:link><item><title> [媒体]错位博物馆</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35590745&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;错位博物馆&lt;/a>;&lt;br />;错位博物馆是一个独特且发人深省的博物馆，探索人工智能对人类的影响。策展人 Audrey Kim 汇集了互动艺术和展品，展示了流氓人工智能的潜在危险。该博物馆的特色展品包括一部由 AI 工具编写和制作动画的电影、一架由细菌创作音乐的自弹钢琴，以及一组机器人垃圾邮件箱，这些垃圾邮件箱可以打印出由奥尔德斯·赫胥黎 (Aldous Huxley) 的《美丽新世界》(Brave New World) 训练的模型生成的垃圾邮件内容。 GPT教堂是必看的展品，参观者可以召唤GPT并与其进行语音对话。该博物馆位于旧金山，将持续到 2023 年 5 月 1 日。&lt;br/>;&lt;br/>;</description><pubDate> Tue, 18 Apr 2023 09:03:25 +0300</pubDate><link/> https://t.me/hn_summary/20531<guid> https://t.me/hn_summary/20531</guid></item><item><title>适用于 Linux 的 SD 存储卡格式化程序</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35610243&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;适用于 Linux 的 SD 存储卡格式化程序&lt;/a>;&lt;br />; SD Memory Card Formatter for Linux 是一种旨在根据 SD 协会创建的 SD 文件系统规范格式化 SD、SDHC 和 SDXC 存储卡的工具。建议使用此工具而不是个别操作系统提供的格式化工具，因为这些工具可能未针对 SD 卡进行优化并可能导致性能下降。 SD Memory Card Formatter 不会格式化 SD 卡中的受保护区域，应通过适当的 PC 应用程序或提供 SD 安全功能的 SD 主机设备对其进行格式化。该工具与通过 Windows 的“BitLocker To Go”功能加密的 SD 卡不兼容。该工具可供下载，由 Tuxera 开发。</description><pubDate> Tue, 18 Apr 2023 08:50:10 +0300</pubDate><link/> https://t.me/hn_summary/20530<guid> https://t.me/hn_summary/20530</guid></item><item><title> [媒体] 推动与语言无关的程序减少 1-Minimality 的极限</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35609675&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;突破 1-Minimality 语言不可知程序缩减的极限&lt; /a>;&lt;br />; 本文提出了 Vulcan，这是一种与语言无关的框架，可进一步减少由与语言无关的程序缩减器 (AGR) 生成的错误触发程序。虽然 AGR 已经证明了它们在促进调试语言实现方面的有用性，但它们的 1-minimal 结果仍然可能很大并且包含过多的与错误无关的程序元素。 Vulcan利用语言的形式化语法进行多样的程序转换，希望为其他归约算法创造归约机会，甚至直接从结果中删除与bug无关的元素。该框架在所有基准测试中的规模都优于最先进的与语言无关的程序缩减器 Perses，如果分配更多缩减时间，它可以产生更小的结果。 （根据 9% 的故事文本进行总结。）&lt;br/>;&lt;br/>;</description><pubDate> Tue, 18 Apr 2023 08:40:55 +0300</pubDate><link/> https://t.me/hn_summary/20529<guid> https://t.me/hn_summary/20529</guid></item><item><title> [媒体] 扩展舒适区的循证指南</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35609779&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;扩展舒适区的循证指南&lt;/a>; &lt;br />; 这篇文章讨论了扩大一个人的舒适区对于在商业和生活中取得成功的重要性。作者解释说，呆在舒适区内会导致停滞和倦怠，并提供了扩大舒适区的技巧，例如弄清楚什么是重要的，增加留在舒适区的成本，建立不适容忍度，以及建立承诺脚手架。文章还从接受与承诺疗法 (ACT) 的角度探讨了舒适区的概念，并提供了建立不适容忍度的练习，例如静止冥想、练习对立面和暴露阶梯。这篇文章由 Sentient 赞助，这是一家将内部文档转换为聊天机器人的公司。 （根据 81% 的故事文本进行总结。）&lt;br/>;&lt;br/>;</description><pubDate> Tue, 18 Apr 2023 08:38:38 +0300</pubDate><link/> https://t.me/hn_summary/20528<guid> https://t.me/hn_summary/20528</guid></item><item><title> [媒体] 你不只是那样做，Heroku</title><description> &lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35610168&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;你不只是这样做，Heroku&lt;/a>;&lt; br />; MusicButler web-app 的作者发现 Heroku 自 2023 年 4 月 6 日起一直在运行其调度程序实例的第二个副本，导致所有计划任务执行两次，并对用户造成干扰。尽管联系了 Heroku 的支持，但问题仍未解决，旧的 celerybeat dyno 仍然使用过时的代码。作者建议优先考虑基础设施工作并考虑其他 Web 开发提供商，如 Render 和 Railway，并将应用程序 Docker 化以减少在供应商之间移动的痛苦。 （根据 97% 的故事文本进行总结。）&lt;br/>;&lt;br/>;</description><pubDate> Tue, 18 Apr 2023 08:27:23 +0300</pubDate><link/> https://t.me/hn_summary/20527<guid> https://t.me/hn_summary/20527</guid></item><item><title> [媒体] Rust 中的 Kubernetes Operator</title><description> &lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35608624&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;Rust 中的 Kubernetes 运算符&lt;/a>;&lt;br />; &lt;a href=&quot;thetechtrailblazer.blog&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;thetechtrailblazer.blog&lt;/a>; 的作者用 Rust 编写了一个 Kubernetes 运算符，并发现它是一种愉快的体验。他们将其与使用 kubebuilder 和 Go 进行了比较，发现 Rust 的样板文件明显更少，从长远来看更容易维护。 Rust 还提供了内存安全、更好的性能和更少的资源使用，使其更适合高性能运算符。然而，Rust operator 的编译时间比 Go 和 kubebuilder 长，而且社区仍然很小。总的来说，作者喜欢用 Rust 写作并发现它更有效率。&lt;br/>;&lt;br/>;</description><pubDate> Tue, 18 Apr 2023 08:13:10 +0300</pubDate><link/> https://t.me/hn_summary/20526<guid> https://t.me/hn_summary/20526</guid></item><item><title>让未来再次光明：论构建新的进步哲学</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35609758&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;让未来再次光明：构建新的进步哲学&lt; /a&lt;br />; 在 Hub Dialogues 的这一集中，主持人 Sean Speer 与非营利组织 Roots of Progress 的创始人 Jason Crawford 就人类进步、进步放缓的原因以及新的进步哲学如何帮助加速它。克劳福德认为，自 20 世纪 70 年代初以来，进展已经放缓，他提出了三个主要假设来解释原因：监管负担、研究的集中化和官僚化，以及不再重视进步的文化转变。他还讨论了系统研究进步以及对其性质、原因、价值和重要性建立更清晰理解的重要性。 （根据 33% 的故事文本进行总结。）</description><pubDate> Tue, 18 Apr 2023 08:07:59 +0300</pubDate><link/> https://t.me/hn_summary/20525<guid> https://t.me/hn_summary/20525</guid></item><item><title>问 HN：关于计算机工作原理的好书是什么？</title><description> &lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35609657&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;问 HN：关于计算机工作原理的好书是什么？&lt; /a&lt;br />; 如果您正在寻找一本解释计算机工作原理的好书，那么您来对地方了。 HN 社区有一些很好的建议，包括 Charles Petzold 的“代码：计算机硬件和软件的隐藏语言”和“但是它是如何知道的？” J.克拉克斯科特。一些用户还建议查看在线资源，例如 YouTube 上的计算机科学领域指南和计算机科学速成课程系列。无论您是初学者还是专家，每个人都可以从中了解计算机的内部工作原理。</description><pubDate> Tue, 18 Apr 2023 08:03:49 +0300</pubDate><link/> https://t.me/hn_summary/20524<guid> https://t.me/hn_summary/20524</guid></item><item><title>新异或问题</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35609652&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;新的异或问题&lt;/a>;&lt;br />;异或困扰早期神经网络研究人员的问题，现在可以通过具有隐藏层的神经网络来解决。然而，相关的 PARITY 问题，即当二进制串中有偶数个 1 时需要输出 1，仍然对固定深度的 Transformer 提出了挑战。这种限制导致了提示技术的发展，在这种技术中，Transformer 被给予问题和解决方案的示例作为提示，然后期望生成解决方案。虽然这种技术已经成功地提高了上下文学习任务的性能，但对于某些需要进行迭代计算的任务来说，它可能是必要的。 （根据 64% 的故事文本进行总结。）</description><pubDate> Tue, 18 Apr 2023 07:54:38 +0300</pubDate><link/> https://t.me/hn_summary/20523<guid> https://t.me/hn_summary/20523</guid></item><item><title> Ampersand 曾经是“and per se and”，是字母表中的第 27 个字母</title><description>&lt;br/>;&lt;a href=&quot;https://news.ycombinator.com/item?id=35609735&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;>;&amp; 符号曾经是“and per se and” &amp; 是第 27 个字母字母表的&lt;/a>;&lt;br />; HaggardHawks 博客揭示了常用于表示单词“and”的“&amp;”符号曾被认为是字母表中的第 27 个字母，被称为“and per se and”。该符号源自拉丁词“et”中字母 E 和 T 的组合。该博客还庆祝在 Twitter 上达到 12,000 名关注者，并邀请读者使用 Haggard Hawks Spelling Bee 测试他们的拼写技能，以纪念世界词典日。</description><pubDate> Tue, 18 Apr 2023 07:53:29 +0300</pubDate><link/> https://t.me/hn_summary/20522<guid> https://t.me/hn_summary/20522</guid></item></channel></rss>