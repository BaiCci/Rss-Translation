<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：开源</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>与 [开源](http://en.wikipedia.org/wiki/open_source) 相关的所有内容的 Reddit 子版块。</description>
    <lastBuildDate>Wed, 20 Sep 2023 18:24:17 GMT</lastBuildDate>
    <item>
      <title>用于快速创建带有姓名的人物照片列表的工具</title>
      <link>https://www.reddit.com/r/opensource/comments/16npabg/tool_to_quickly_create_a_list_of_peoples_pictures/</link>
      <description><![CDATA[嗨， 我是一名大学老师，直到去年，还雇一个人为所有的照片拍照。学生并为每个班级创建一个文件，其中包含带有相关名称的图片。我依靠这些文件来了解我学生的名字，我认为这是至关重要的！我的学生不仅仅是数字（正如这里的许多老师似乎认为的那样），年初知道他们所有的名字对我来说很重要。 问题是，今年负责人做的事情由于某种原因，那不会这样做。我的一些同事决定用自己的手机给课堂上的学生拍照（贴上写有他们名字的牌子），但我觉得这样做不太舒服。 所以，我会就像要求学生给自己拍照，用“firstname name.jpg”（或类似的东西）格式重命名文件，然后将它们发送给我，我想知道是否有某种方法可以或多或少地自动创建一个每页有 9 或 12 张图片的文档，图片下方有文件名。它看起来相对基础，但我对摄影或与设计相关的相关开源软件或类似的东西了解不多，所以我认为这个社区可能有一些技巧。如果没有软件可以为我做到这一点，那么最简单（也是最快）的方法是什么？  非常感谢您提供的任何建议，如果您需要更多信息，请随时告诉我！ :)   由   提交 /u/MitchBuchanon   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16npabg/tool_to_quickly_create_a_list_of_peoples_pictures/</guid>
      <pubDate>Wed, 20 Sep 2023 16:13:32 GMT</pubDate>
    </item>
    <item>
      <title>两个适合初学者的 C++17 项目正在寻找贡献者</title>
      <link>https://www.reddit.com/r/opensource/comments/16noi51/two_beginnerfriendly_c17_projects_are_looking_for/</link>
      <description><![CDATA[https://gavv.net/文章/cpp-help-wanted/   由   提交/u/gavv42  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16noi51/two_beginnerfriendly_c17_projects_are_looking_for/</guid>
      <pubDate>Wed, 20 Sep 2023 15:42:12 GMT</pubDate>
    </item>
    <item>
      <title>推荐机器学习贡献</title>
      <link>https://www.reddit.com/r/opensource/comments/16noa9g/recommend_machine_learning_contributions/</link>
      <description><![CDATA[我是开源新手。之前没有贡献过。我擅长 Python，并且已完成 Andrew Ng 的机器学习专业化课程。 您能否指出我可以开始贡献的任何具体问题或代码库   由   提交 /u/KamaalFrvr   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16noa9g/recommend_machine_learning_contributions/</guid>
      <pubDate>Wed, 20 Sep 2023 15:33:36 GMT</pubDate>
    </item>
    <item>
      <title>为幽灵博客作者提供的开源工具</title>
      <link>https://www.reddit.com/r/opensource/comments/16no32u/an_opensource_tool_for_ghost_blog_writers/</link>
      <description><![CDATA[ 由   提交/u/brbee07  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16no32u/an_opensource_tool_for_ghost_blog_writers/</guid>
      <pubDate>Wed, 20 Sep 2023 15:25:39 GMT</pubDate>
    </item>
    <item>
      <title>构建开源软件：Web3j，一个起源故事</title>
      <link>https://www.reddit.com/r/opensource/comments/16ngngr/building_open_source_software_web3j_an_origin/</link>
      <description><![CDATA[   /u/conor_10  [链接] [评论] &lt; /表&gt;]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16ngngr/building_open_source_software_web3j_an_origin/</guid>
      <pubDate>Wed, 20 Sep 2023 09:17:57 GMT</pubDate>
    </item>
    <item>
      <title>寻找网络概览、交互式地图。</title>
      <link>https://www.reddit.com/r/opensource/comments/16nfgbv/in_search_for_a_network_overview_interactive_map/</link>
      <description><![CDATA[嗨， 我正在寻找一些开源应用程序，我可以在 Linux 服务器上托管该应用程序，该应用程序类似于Auvik。 我想要一张地图，可以通过网络系统精确定位不同的位置，然后能够单击它们并查看它们有哪些交换机以及它们是否对 ping 进行应答，而且我也想要如果要擦除交换机上的配置，请将配置文件添加到交换机作为备份。我不在乎是否需要手动添加开关和配置，但我希望它像一个良好的流程，我可以在其中存储这些类型的信息并轻松查找信息。 是否有这样的应用程序这是值得信赖的、开源的、免费的吗？  编辑：经过一番思考，我毕竟不想要地图，但我想要一个类似于汇合中的可扩展列表的解决方案，但我希望能够在列表中搜索，并且我希望有多个可扩展列表内的可扩展项目。我还想链接或以某种方式上传文件到列表项之一。   由   提交 /u/RebekkaBecka   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16nfgbv/in_search_for_a_network_overview_interactive_map/</guid>
      <pubDate>Wed, 20 Sep 2023 07:59:54 GMT</pubDate>
    </item>
    <item>
      <title>比开源更开放</title>
      <link>https://www.reddit.com/r/opensource/comments/16neje1/more_open_than_open_source/</link>
      <description><![CDATA[有没有更公开透明的开源版本？看来开源还不够开放。 他们将来可能会更改许可证，例如）开源为专有。 或者他们在开放时可能有很多限制 或者只展示源代码的一部分而不是完整的。 等等... 对我来说，真正的开源是,  1.如果需要的话，公开完整的源代码和其他内容，公开他们如何从头到尾开发它，因此实际上任何人都可以从头开始制作相同的软件，就像原始创建者如何创建一样（尽管可能没有必要从头开始做同样的事情，但它是开源的一个证明）。   与原始创建者拥有相同的软件所有权。这意味着您可以使用该软件做任何您想做的事情，这根本不重要。根本没有任何限制。即使原作者说了“你不允许这样做”之类的话，但没关系，这是你的软件，即使你没有自己制作该软件，你也是所有者 他们最初会宣布用户将能够“分叉”该软件并继续开发无论他们做什么或说什么（即使他们说你将来不允许分叉或进一步开发它）。 他们承诺不会改变许可证，这将导致软件安全稳定，许可证无法降级，承诺将来不会更改许可证。 即使他们在许可证中添加限制未来，没关系。  如果有我没有提到的相关内容，还有更多。  这个比原来开源的够开放吗？或者已经有这样的软件了吗？   由   提交/u/bull_shit123  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16neje1/more_open_than_open_source/</guid>
      <pubDate>Wed, 20 Sep 2023 07:01:21 GMT</pubDate>
    </item>
    <item>
      <title>ReLogic <3</title>
      <link>https://www.reddit.com/r/opensource/comments/16n198o/relogic_3/</link>
      <description><![CDATA[     &lt; /td&gt;  由   提交/u/Hazardous_Nights  [链接] [评论] &lt; /表&gt;]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16n198o/relogic_3/</guid>
      <pubDate>Tue, 19 Sep 2023 20:19:53 GMT</pubDate>
    </item>
    <item>
      <title>您对 Atlas OS 有何看法？</title>
      <link>https://www.reddit.com/r/opensource/comments/16n11nb/what_are_your_thoughts_on_atlas_os/</link>
      <description><![CDATA[我搜索了 Reddit 子版块，没有找到任何有关该项目的信息。 这是一个 Windows 重新设计/升级/提升/idk 根据 GPL 3.0 发布 https://atlasos.net/ https://github.com/atlas-os/atlas   由   提交 /u/Fireworker2000   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16n11nb/what_are_your_thoughts_on_atlas_os/</guid>
      <pubDate>Tue, 19 Sep 2023 20:11:16 GMT</pubDate>
    </item>
    <item>
      <title>GPL 类路径例外作为简单专有许可证的基础</title>
      <link>https://www.reddit.com/r/opensource/comments/16mz5f0/gpl_classpath_exception_as_a_basis_for_a_simple/</link>
      <description><![CDATA[我在 opensource.stackexchange.com 上发布了以下问题，但它被认为是偏离主题的，我同意这一点，所以我要看看这些部分是否有人愿意集思广益。 我即将发布一个使用 GPL 许可证的应用程序框架，以便能够使用商业许可证进行双重许可证。我一直在研究商业软件许可证的示例，它们非常令人畏惧，一页又一页的法律术语，通常包括支持合同条款、赔偿条款等。 现在，我想要什么要做的就是简单地使用尽可能简单的许可证来出售在闭源应用程序中使用该框架的权限。我不会对软件本身收费，只是将其与专有产品链接的许可收费。 这个想法是将许可证基于已经被广泛接受的东西，即 GPL 类路径例外，它授予将 GPL 许可库与专有产品链接的权利，而不会使 GPL 的任何其他部分失效，这正是我想要的，除了我想向特定公司付费授予此确切许可，而不是每个人的权利（那么我就简单地使用 LGPL）。 我有一种感觉，这种简约的许可证对于开源开发人员来说是一种很好的方式，可以从他们的工作中获取一些收入，而不必立即全力以赴启动启动列车。 我不抱任何幻想，我将能够在最终不咨询律师的情况下提出实际的许可证文本，但我很乐意得到关于人们使用如此简单的许可证会遇到什么问题以及您的一般想法或您是否知道现有许可证的一些意见。 以下是我想出的内容（基于 类路径异常):  该库的版权所有者授予公司链接[版本版本]的权限范围]* 该库具有独立模块来生成可执行文件，无论这些独立模块的许可条款如何，并根据他们选择的条款复制和分发生成的可执行文件，前提是公司还满足每个链接的独立模块，该模块的许可条款和条件。独立模块是指不是从该库派生或基于该库的模块。公司不得将此权限扩展到其库版本，无论库是否已修改。  * 作为许可证限制的示例，可选，因为我假设大多数无论如何，许可合同都会有一个有效日期范围。 opensource.stackexchange.com 上的一位用户指出，最后一句限制公司使用第三方软件经销商分发软件（或者这就是我对评论），因为公司可能不会将其许可扩展到第三方，并且必须自行处理所有分发。 这是必须通过附加条款解决的问题的示例现在，这样的最低限度的许可证很可能完全是一个幻想，最终在它可用之前将成为一页又一页的法律术语，但如果这可能的话，那么我认为拥有一个简单的许可证模板会很棒，希望对 GPL 库的专有使用收费的开发人员无需立即成立一家公司来履行支持合同，可以让律师查看并改编该模板以满足他们的需求。   由   提交/u/darri  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16mz5f0/gpl_classpath_exception_as_a_basis_for_a_simple/</guid>
      <pubDate>Tue, 19 Sep 2023 18:54:48 GMT</pubDate>
    </item>
    <item>
      <title>如何开始使用开源</title>
      <link>https://www.reddit.com/r/opensource/comments/16mwmbu/how_to_start_with_open_source/</link>
      <description><![CDATA[大家好，我是第三学期的计算机专业学生，我想通过为开源做出贡献来提高我的编码技能。我正在 github 上研究一些大型开源项目，但是当阅读 CONTRIBUTION.txt 时，我立即不知所措。为了构建项目，我经常需要做很多事情和配置！？有时我什至会失败，更不用说贡献任何实际的好代码了。有谁知道如何让开始变得不那么势不可挡和复杂吗？我不想花费几个小时正确构建该容器并正确配置该文件等。我想编码！   由   提交 /u/DrBilip   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16mwmbu/how_to_start_with_open_source/</guid>
      <pubDate>Tue, 19 Sep 2023 17:10:33 GMT</pubDate>
    </item>
    <item>
      <title>一个简单的统计软件估算器</title>
      <link>https://www.reddit.com/r/opensource/comments/16mtj5c/a_simple_statisitical_software_estimator/</link>
      <description><![CDATA[       由   提交/u/justinbmeyer   [链接] [评论] &lt; /表&gt;]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16mtj5c/a_simple_statisitical_software_estimator/</guid>
      <pubDate>Tue, 19 Sep 2023 15:07:24 GMT</pubDate>
    </item>
    <item>
      <title>产品演示。去中心化、快速且免费的 URL 缩短器</title>
      <link>https://www.reddit.com/r/opensource/comments/16mmrpw/product_demo_decentralized_fast_and_free_url/</link>
      <description><![CDATA[我很高兴推出一款开源、去中心化的 URL 缩短器。 https://w3.do/ 快速且无忧无虑。无广告。没有账户。无跟踪。 此外，开发人员可以访问免费 API 来创建这些链接。   由   提交 /u/ErmJustSaying   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16mmrpw/product_demo_decentralized_fast_and_free_url/</guid>
      <pubDate>Tue, 19 Sep 2023 09:56:07 GMT</pubDate>
    </item>
    <item>
      <title>#OpenSourceDiscovery 81 - 打开解释器 = CLI 指令 -> LLM -> 代码 -> 执行</title>
      <link>https://www.reddit.com/r/opensource/comments/16midun/opensourcediscovery_81_open_interpreter_cli/</link>
      <description><![CDATA[这是 在 #OpenSourceDiscovery 时事通讯问题上发布的完整评论 项目：Open Interpreter（允许法学硕士在终端本地运行代码的 CLI）  基于 Python 的命令行工具，使用 LLM 将自然语言指令转换为代码（Python、Javascript、bash 等）并在本地执行。只需在终端中运行 interpreter 命令即可开始聊天。   来源：https://github.com/KillianLucas/open-interpreter 堆栈：Python、GPT4/CodeLLaMA 作者：Killian &lt; li&gt;许可证：MIT  💖 我喜欢 Open Interpreter 的地方：  易于设置和开发友好的界面 自动无需额外输入即可进行修正 支持 CodeLLaMA 使其完全私有  👎 我不喜欢的：  糟糕的 CodeLLaMA 输出（如与出色的 GPT4 输出相反） 没有浏览功能使其错过最新数据/上下文  ⭐ 评级和指标 基于我的经验，我对该项目的评分如下  生产准备度：8/10 文档评分：6/10 POC 时间（证明概念）：1 分钟  注意：我试图总结 #OpenSourceDiscovery 上发布的完整评论中最重要的部分 时事通讯。如果您觉得我错过了一些上下文，请随时在评论中提问。我很乐意回答。 很想听听您对此项目的体验或我尚不知道的任何替代方案  &amp;# 32；由   提交/u/opensourcecolumbus  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16midun/opensourcediscovery_81_open_interpreter_cli/</guid>
      <pubDate>Tue, 19 Sep 2023 05:27:52 GMT</pubDate>
    </item>
    <item>
      <title>如何从头开始创建 npm 包/插件？</title>
      <link>https://www.reddit.com/r/opensource/comments/16m6k5p/how_to_create_a_npm_packageplugin_from_scratch/</link>
      <description><![CDATA[嘿社区， 我希望我的问题不是太复杂。我真的很想创建一个 npm 包/插件，我挖了一点，fork 并克隆了其他几个人的包，并尝试在我的笔记本电脑上本地运行它。我想知道我看到的所有内容都没有前端，那么如何使用 localhost 在本地预览/观看它们？我感到很困惑，不知道如何开始。   由   提交 /u/Pipe-Silly   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/16m6k5p/how_to_create_a_npm_packageplugin_from_scratch/</guid>
      <pubDate>Mon, 18 Sep 2023 20:35:57 GMT</pubDate>
    </item>
    </channel>
</rss>